import { useState } from "react";

export function Form({ onAddItems }) {
  const [description, setDescription] = useState("");
  const [quantity, setQuantity] = useState(1);

  function handleSubmit(e) {
    e.preventDefault();

    if (!description) return;

    const newItem = { description, quantity, packed: false, id: Date.now() };
    console.log(newItem);

    onAddItems(newItem);

    setDescription("");
    setQuantity(1);
  }

  return (
    <form className="add-form" onSubmit={handleSubmit}>
      <h3>What do you need for your üòç trip?</h3>
      <select
        value={
          quantity
        } /* value'y√º kullanƒ±yoruz. A≈üaƒüƒ±da input'ta da aynƒ± ≈üekilde. √á√ºnk√º bu alanlarƒ± g√ºncellediƒüimizde ilk
        deƒüer'de g√ºncellensin istiyoruz. Bizim bu iki √∂rneƒüimizde submit yapƒ±nca bunu 1 yapƒ±yoruz a≈üaƒüƒ±daki
        input √∂rneƒüinde iste bo≈ü string yapƒ±yoruz mesela. Daha ba≈üka √∂rnekte kullanƒ±cƒ± submit yaptƒ±ktan sonra mesela formda
        istediƒüimiz ≈üeyi g√∂sterebiliriz value ile. √á√ºnk√º ilk deƒüer bu value. Reddit'de aynƒ± soruyu sormu≈ü bu value'ye ne gerek var
        diye birisi. sonu√ßta onchange i≈üini yapƒ±yor diye. ≈û√∂yle cevaplanmƒ±≈ü:
        At the moment, it's just acting like an initial value, but say name was set elsewhere, if you'd want the input to use this newly set value,
        you would need to keep the value attribute. Bende de b√∂yle yapƒ±yor ≈üu an. Submit edip basƒ±nca form i√ßini ilk hale getiriyor State ile.
        ƒ∞stersen value'y√º √ßƒ±kar ve dene. Value'ye state koymak bizim √∂rneƒüimideki gibi controlled bir element yapƒ±yor yani elamanƒ±. React'ƒ±n
        kontrol√ºne ge√ßiyor yani bizim kontrol√ºm√ºze. State ile istediƒüimizi koyabiliyoruz.*/
        onChange={(e) => {
          setQuantity(Number(e.target.value));
        }}
      >
        {Array.from({ length: 20 }, (_, i) => i + 1).map(
          (
            num /* 20 sayƒ±lƒ± bir array olu≈üturma ve ondan 20 tane options olu≈üturma map ile. B√∂yle bir metot var. */
          ) => (
            <option value={num} key={num}>
              {num}
            </option>
          )
        )}
      </select>
      <input
        placeholder="Item..."
        value={description}
        onChange={(e) => setDescription(e.target.value)}
      ></input>
      <button>add</button>
    </form>
  );
}
